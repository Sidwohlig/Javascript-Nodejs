# Node.js specific ignores
node_modules/              # The most important one: all installed npm/yarn packages
npm-debug.log              # Debug logs generated by npm
npm-debug.log.* # More general debug logs
yarn-error.log             # Error logs generated by Yarn
.env                       # Environment variables (critical for sensitive info like API keys)

# Build artifacts and temporary files
build/                     # Common directory for compiled/built output
dist/                      # Another common directory for distribution/compiled output
tmp/                       # General temporary files
temp/                      # General temporary files
*.tgz                      # Compressed archives (like npm packs)

# User-uploaded files or generated content
# Based on your 'file-upload-app/uploads/'
file-upload-app/uploads/   # Very important: do NOT commit user-uploaded files.

# Log files (if your application generates them)
*.log
logs/                      # A common directory for application logs

# Operating System Files
.DS_Store                  # macOS specific files
Thumbs.db                  # Windows specific thumbnail cache

# Editor/IDE specific files (optional, but generally good to ignore if personal)
.vscode/                   # VS Code configuration (often contains user-specific settings)
.idea/                     # IntelliJ IDEA project files
*.sublime-workspace        # Sublime Text workspace files
*.swp                      # Vim swap files
*.bak                      # Backup files generated by some editors

# Dependency Lock Files (Conditional)
# You currently have yarn.lock in your staged files.
# For most projects, `yarn.lock` (and `package-lock.json`) SHOULD be committed
# to ensure reproducible builds across different environments.
# If for some *very specific* reason you DIDN'T want to commit them, you would uncomment these:
# yarn.lock
# package-lock.json

# You had yarn.lock staged, which is generally good practice to commit.
# If you also use npm, you'd have package-lock.json.
# It's usually best to commit these for dependency consistency.
node_modules
